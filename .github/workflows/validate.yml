name: Validate

on:
  push:
    branches: [main]
  pull_request:

jobs:
  validate-syntax:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Homebrew
        if: runner.os == 'Linux'
        uses: Homebrew/actions/setup-homebrew@master

      - name: Validate cask syntax
        run: |
          brew style Casks/jdk26ea.rb
          ruby -c Casks/jdk26ea.rb

      - name: Validate formula syntax
        run: |
          brew style Formula/jdk26ea.rb
          ruby -c Formula/jdk26ea.rb

  test-install-macos:
    strategy:
      matrix:
        os: [macos-13, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Tap repository
        run: |
          brew tap artagon/jdk26ea "$GITHUB_WORKSPACE"

      - name: Test cask installation
        run: |
          brew install --cask jdk26ea

      - name: Verify installation
        run: |
          if [ -d "/Library/Java/JavaVirtualMachines/jdk-26-ea.jdk" ]; then
            echo "✅ JDK installed successfully"
            /Library/Java/JavaVirtualMachines/jdk-26-ea.jdk/Contents/Home/bin/java -version
          else
            echo "❌ JDK installation failed"
            exit 1
          fi

      - name: Cleanup
        if: always()
        run: |
          brew uninstall --cask jdk26ea || true

  test-install-linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x64
          - os: ubuntu-24.04
            arch: x64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Display system info
        run: |
          echo "OS: $(uname -s)"
          echo "Arch: $(uname -m)"
          echo "Distribution: $(cat /etc/os-release | grep PRETTY_NAME)"

      - name: Tap repository
        run: |
          brew tap artagon/jdk26ea "$GITHUB_WORKSPACE"

      - name: Test formula installation
        run: |
          brew install jdk26ea

      - name: Verify installation
        run: |
          JDK_PREFIX="$(brew --prefix jdk26ea)"
          if [ -d "$JDK_PREFIX" ]; then
            echo "✅ JDK installed successfully at $JDK_PREFIX"
            "$JDK_PREFIX/bin/java" -version
          else
            echo "❌ JDK installation failed"
            exit 1
          fi

      - name: Test JAVA_HOME setup
        run: |
          export JAVA_HOME="$(brew --prefix jdk26ea)"
          echo "JAVA_HOME=$JAVA_HOME"
          echo "Testing java compiler and runtime..."
          "$JAVA_HOME/bin/java" -version
          "$JAVA_HOME/bin/javac" -version

      - name: Test basic Java functionality
        run: |
          export JAVA_HOME="$(brew --prefix jdk26ea)"
          export PATH="$JAVA_HOME/bin:$PATH"

          # Create and compile a test program
          cat > HelloWorld.java << 'EOF'
          public class HelloWorld {
              public static void main(String[] args) {
                  System.out.println("JDK 26 EA is working!");
                  System.out.println("Java version: " + System.getProperty("java.version"));
              }
          }
          EOF

          javac HelloWorld.java
          java HelloWorld

      - name: Cleanup
        if: always()
        run: |
          brew uninstall jdk26ea || true

  test-install-linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Test installation on ARM64 via Docker
        run: |
          docker run --rm --platform linux/arm64 \
            -v "$GITHUB_WORKSPACE:/workspace" \
            -w /workspace \
            ubuntu:22.04 bash -c '
              set -e

              # Display system info
              echo "Architecture: $(uname -m)"
              echo "OS: $(cat /etc/os-release | grep PRETTY_NAME)"

              # Install dependencies
              apt-get update
              apt-get install -y curl git build-essential procps file

              # Install Homebrew
              NONINTERACTIVE=1 bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

              # Add Homebrew to PATH
              eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

              # Tap repository
              brew tap artagon/jdk26ea /workspace

              # Install JDK
              brew install jdk26ea

              # Verify installation
              JDK_PREFIX="$(brew --prefix jdk26ea)"
              if [ -d "$JDK_PREFIX" ]; then
                echo "✅ JDK installed successfully at $JDK_PREFIX"
                "$JDK_PREFIX/bin/java" -version
                "$JDK_PREFIX/bin/javac" -version
              else
                echo "❌ JDK installation failed"
                exit 1
              fi

              # Test basic Java functionality
              export JAVA_HOME="$JDK_PREFIX"
              export PATH="$JAVA_HOME/bin:$PATH"

              cat > HelloWorld.java << "EOF"
              public class HelloWorld {
                  public static void main(String[] args) {
                      System.out.println("JDK 26 EA ARM64 is working!");
                      System.out.println("Architecture: " + System.getProperty("os.arch"));
                      System.out.println("Java version: " + System.getProperty("java.version"));
                  }
              }
              EOF

              javac HelloWorld.java
              java HelloWorld
            '
